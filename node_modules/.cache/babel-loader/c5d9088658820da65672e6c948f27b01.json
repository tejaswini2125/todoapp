{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\admin\\\\my-app\\\\src\\\\App.js\";\nimport React from 'react';\nimport { render } from 'react-dom';\nimport './App.css';\nexport default class App extends React.Component {\n  constructor() {\n    super(); // Binding method\n\n    this.rows = [];\n    this.objectRows = [];\n    this.title = \"\";\n    this.handleClick = this.handleClick.bind(this);\n    this.state = {\n      value: ''\n    };\n  }\n\n  handleClick() {\n    if (this.title) {\n      this.objectRows.push({\n        text: this.title,\n        checked: false\n      });\n      this.state.value = '';\n      this.setState(this.state);\n    }\n  }\n\n  removeTodo(index, event) {\n    event.preventDefault();\n    this.rows.splice(index, 1);\n    this.objectRows.splice(index, 1);\n    this.state.value = '';\n    this.setState(this.state);\n  }\n\n  toggleToDo(index) {\n    this.objectRows[index].checked = !this.objectRows[index].checked;\n    this.state.value = '';\n    this.setState(this.state);\n  }\n\n  render() {\n    this.rows = [];\n\n    for (let i = 0; i < this.objectRows.length; i++) {\n      this.rows.push( /*#__PURE__*/_jsxDEV(\"li\", {\n        className: this.objectRows[i].checked ? \"checked\" : \"\",\n        onClick: () => this.toggleToDo(i),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"textStyle\",\n          children: this.objectRows[i].text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"close\",\n          onClick: event => this.removeTodo(i, event),\n          children: \"X\"\n        }, \"del\" + i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 7\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 22\n      }, this));\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"test\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"myDIV\",\n          className: \"header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"My To Do List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"myInput\",\n            onChange: event => this.title = event.target.value,\n            placeholder: \"Title...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: this.handleClick,\n            className: \"addBtn\",\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          id: \"myUL\",\n          children: this.rows\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nrender( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 66,\n  columnNumber: 8\n}, this), document.getElementById('root'));","map":{"version":3,"sources":["C:/Users/admin/my-app/src/App.js"],"names":["React","render","App","Component","constructor","rows","objectRows","title","handleClick","bind","state","value","push","text","checked","setState","removeTodo","index","event","preventDefault","splice","toggleToDo","i","length","target","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { render } from 'react-dom';\nimport './App.css';\n\nexport default class App extends React.Component {\n  rows = [];\n  objectRows = [];\n  title = \"\";\n\n  constructor() {\n    super();\n    // Binding method\n    this.handleClick = this.handleClick.bind(this);\n    this.state = {\n      value: ''\n    }\n\n  }\n\n\n  handleClick() {\n    if (this.title) {\n      this.objectRows.push({ text: this.title, checked: false })\n      this.state.value = '';\n      this.setState(this.state);\n    }\n  }\n  removeTodo( index, event ){\n    event.preventDefault();\n    this.rows.splice(index, 1);\n    this.objectRows.splice(index, 1);\n    this.state.value = '';\n    this.setState(this.state);\n  }\n  toggleToDo(index) {\n    this.objectRows[index].checked = !this.objectRows[index].checked\n    this.state.value = '';\n    this.setState(this.state);\n  } \n  render() {\n    this.rows = [];\n    for (let i = 0; i < this.objectRows.length; i++) {\n      this.rows.push(<li key={i} className={this.objectRows[i].checked ? \"checked\" : \"\"} \n      onClick={ () => this.toggleToDo(i)} >\n        <span className=\"textStyle\">{this.objectRows[i].text}</span>\n      <span className=\"close\" key={\"del\"+i} onClick={  (event) => this.removeTodo(i,event)} >X</span>\n      </li>);\n    }\n    return (\n      <div className=\"App\">\n        <div className=\"test\">\n          <div id=\"myDIV\" className=\"header\">\n            <h2>My To Do List</h2>\n            <input type=\"text\" id=\"myInput\" onChange={event => this.title = event.target.value} placeholder=\"Title...\" />\n            <span onClick={this.handleClick} className=\"addBtn\">Add</span>\n          </div>\n          <ul id=\"myUL\">\n            {this.rows}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n\n}\nrender(<App />, document.getElementById('root'));\n\n"]},"metadata":{},"sourceType":"module"}