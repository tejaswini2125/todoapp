{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\admin\\\\my-app\\\\src\\\\App.js\";\nimport React from 'react';\nimport { render } from 'react-dom';\nimport './App.css';\nexport default class App extends React.Component {\n  constructor() {\n    super(); // Binding method\n\n    this.rows = [];\n    this.objectRows = [];\n    this.title = \"\";\n    this.state = {\n      value: ''\n    };\n  }\n\n  handleClick() {\n    if (this.title) {\n      this.objectRows.push({\n        text: this.title,\n        checked: false\n      });\n      this.state.value = '';\n      this.setState(this.state);\n    }\n  }\n\n  removeTodo(index, event) {\n    if (this.objectRows[index]) {\n      this.rows.splice(index, 1);\n      this.objectRows.splice(index, 1);\n      this.state.value = '';\n      this.setState(this.state);\n    }\n  }\n\n  toggleToDo(index) {\n    if (this.objectRows[index]) {\n      this.objectRows[index].checked = !this.objectRows[index].checked;\n      this.state.value = '';\n      this.setState(this.state);\n    }\n  }\n\n  render() {\n    this.rows = [];\n\n    for (let i = 0; i < this.objectRows.length; i++) {\n      this.rows.push( /*#__PURE__*/_jsxDEV(\"li\", {\n        className: this.objectRows[i].checked ? \"checked\" : \"\",\n        onClick: () => this.toggleToDo(i),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"textStyle\",\n          children: this.objectRows[i].text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"close textStyle\",\n          onClick: event => this.removeTodo(i, event),\n          children: \"x\"\n        }, \"del\" + i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 22\n      }, this));\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"test\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"myDIV\",\n          className: \"header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"My To Do List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"myInput\",\n            onChange: event => this.title = event.target.value,\n            placeholder: \"Title...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: this.handleClick,\n            className: \"addBtn\",\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          id: \"myUL\",\n          children: this.rows\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nrender( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 68,\n  columnNumber: 8\n}, this), document.getElementById('root'));","map":{"version":3,"sources":["C:/Users/admin/my-app/src/App.js"],"names":["React","render","App","Component","constructor","rows","objectRows","title","state","value","handleClick","push","text","checked","setState","removeTodo","index","event","splice","toggleToDo","i","length","target","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { render } from 'react-dom';\nimport './App.css';\n\nexport default class App extends React.Component {\n  rows = [];\n  objectRows = [];\n  title = \"\";\n\n  constructor() {\n    super();\n    // Binding method\n    this.state = {\n      value: ''\n    }\n\n  }\n\n\n  handleClick() {\n    if (this.title) {\n      this.objectRows.push({ text: this.title, checked: false })\n      this.state.value = '';\n      this.setState(this.state);\n    }\n  }\n  removeTodo(index, event) {\n    if (this.objectRows[index]) {\n      this.rows.splice(index, 1);\n      this.objectRows.splice(index, 1);\n      this.state.value = '';\n      this.setState(this.state);\n    }\n  }\n  toggleToDo(index) {\n    if (this.objectRows[index]) {\n      this.objectRows[index].checked = !this.objectRows[index].checked\n      this.state.value = '';\n      this.setState(this.state);\n    }\n  }\n  render() {\n    this.rows = [];\n    for (let i = 0; i < this.objectRows.length; i++) {\n      this.rows.push(<li key={i} className={this.objectRows[i].checked ? \"checked\" : \"\"}\n        onClick={() => this.toggleToDo(i)} >\n        <span className=\"textStyle\">{this.objectRows[i].text}</span>\n        <span className=\"close textStyle\" key={\"del\" + i} onClick={(event) => this.removeTodo(i, event)} >x</span>\n      </li>);\n    }\n    return (\n      <div className=\"App\">\n        <div className=\"test\">\n          <div id=\"myDIV\" className=\"header\">\n            <h2>My To Do List</h2>\n            <input type=\"text\" id=\"myInput\" onChange={event => this.title = event.target.value} placeholder=\"Title...\" />\n            <span onClick={this.handleClick} className=\"addBtn\">Add</span>\n          </div>\n          <ul id=\"myUL\">\n            {this.rows}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n\n}\nrender(<App />, document.getElementById('root'));\n\n"]},"metadata":{},"sourceType":"module"}